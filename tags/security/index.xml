<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The Meow Blog</title>
    <link>https://jdmaymeow.com/tags/security/index.xml</link>
    <description>Recent content on The Meow Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://jdmaymeow.com/tags/security/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Password reset via email</title>
      <link>https://jdmaymeow.com/post/code-advent/2016/email-password-reset/</link>
      <pubDate>Tue, 20 Dec 2016 13:19:16 +0100</pubDate>
      
      <guid>https://jdmaymeow.com/post/code-advent/2016/email-password-reset/</guid>
      <description>&lt;p&gt;Hi. In this part we will update our CakeAuth plugin with ability to reset forgotten password via email. To ensure this we will add new cell to our databasa for email and passwordReset string,  function for change password and config for email. So we can start.
&lt;/p&gt;

&lt;h2 id=&#34;users-setup&#34;&gt;Users setup&lt;/h2&gt;

&lt;p&gt;First we need update users table witht new fields&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php/cake bake migration AddPasswdResetAndEmailToUsers email:string password_reset:string -p CakeAuth
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Open currently created migration and update password_reset to allow it to be null&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$table-&amp;gt;addColumn(&#39;password_reset&#39;, &#39;string&#39;, [
            &#39;default&#39; =&amp;gt; null,
            &#39;limit&#39; =&amp;gt; 255,
            &#39;null&#39; =&amp;gt; true,
        ]);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;then run migrations &lt;code&gt;php/cake migrations migrate -p CakeAuth&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Update usersTable and add view.&lt;/p&gt;

&lt;p&gt;In UsersTable add&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$validator
    -&amp;gt;email(&#39;email&#39;)
    -&amp;gt;requirePresence(&#39;email&#39;, &#39;create&#39;)
    -&amp;gt;notEmpty(&#39;email&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In view add new field for email&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;echo $this-&amp;gt;Form-&amp;gt;input(&#39;email&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can try create new user, you can see we have new field for email and it&amp;rsquo;s required.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Homework:&lt;/strong&gt; Update users view and add display field for email.&lt;/p&gt;

&lt;h2 id=&#34;password-reset-forms-and-string-generator&#34;&gt;Password reset forms and string generator&lt;/h2&gt;

&lt;p&gt;Ok here we need to create new function forgottenPassword with view. Users who forget password can navigate to formular with only one inpt - email. If submited email is correct we update password_reset field for user with generated string and send link with email to another function newPassword. Ok here is forgottenPassword controller and view: Url for this will looks like &lt;code&gt;http://localhost:8765/cake-auth/users/forgotten-password&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;ForgottenPassword function:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;public function forgottenPassword()
{
    $user = $this-&amp;gt;Users-&amp;gt;newEntity();

    if($this-&amp;gt;request-&amp;gt;is(&#39;post&#39;)) {
        $passResetUser = $this-&amp;gt;Users
            -&amp;gt;findByEmail($this-&amp;gt;request-&amp;gt;data[&#39;email&#39;])
            -&amp;gt;select([&#39;id&#39;,&#39;password_reset&#39;])-&amp;gt;first();

        if($passResetUser) {
            $passResetUser-&amp;gt;password_reset = md5($passResetUser-&amp;gt;id . date(&#39;YmdH&#39;));
            $this-&amp;gt;Users-&amp;gt;save($passResetUser);
            return $this-&amp;gt;redirect([&#39;action&#39; =&amp;gt; &#39;index&#39;]);
        }
    }

    $this-&amp;gt;set(compact(&#39;user&#39;));
    $this-&amp;gt;set(&#39;_serialize&#39;, [&#39;user&#39;]);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Homework:&lt;/strong&gt; Create View&lt;/p&gt;

&lt;p&gt;Email sending . Update function abowe and add this rows:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;//add following lines to send string via email
$message = &#39;Your reset string is: &#39; . $passResetUser-&amp;gt;password_reset;

$email = new Email();
$email-&amp;gt;to($this-&amp;gt;request-&amp;gt;data[&#39;email&#39;])
    -&amp;gt;subject(&#39;Password reset&#39;)
    -&amp;gt;send($message);

return $this-&amp;gt;redirect([&#39;action&#39; =&amp;gt; &#39;index&#39;]);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If user is found and string is saved into database we will send email with string to user&amp;rsquo;s email.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Homework:&lt;/strong&gt; Make eamil more beautifull with template.&lt;/p&gt;

&lt;p&gt;Now we can create new password function and form. Url loks like this &lt;code&gt;http://localhost:8765/cake-auth/users/new-password/&amp;lt;password-reset-string&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;New password function is here:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;public function newPassword($resetID = null)
{
    $user = $this-&amp;gt;Users
        -&amp;gt;find()
        -&amp;gt;where([&#39;password_reset LIKE&#39; =&amp;gt; $resetID])
        -&amp;gt;select([&#39;id&#39;, &#39;password&#39;, &#39;password_reset&#39;])-&amp;gt;first();

    //Default dissalow user to change passord and hide form
    $allowPasswordChange = false;

    if ($user) {
        //when user is found allow change ans show form
        $allowPasswordChange = true;
    }

    // when we post data update user remove password reset string and save
    if ($this-&amp;gt;request-&amp;gt;is([&#39;patch&#39;, &#39;post&#39;, &#39;put&#39;])) {
        $user = $this-&amp;gt;Users-&amp;gt;patchEntity($user, $this-&amp;gt;request-&amp;gt;data);
        $user-&amp;gt;password_reset = &#39;&#39;;
        if ($this-&amp;gt;Users-&amp;gt;save($user)) {
            return $this-&amp;gt;redirect([&#39;action&#39; =&amp;gt; &#39;index&#39;]);
        }
    }


    $this-&amp;gt;set(compact(&#39;allowPasswordChange&#39;, &#39;user&#39;));
    $this-&amp;gt;set(&#39;_serialize&#39;, [&#39;allowPasswordChange&#39;, &#39;user&#39;]);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Homework:&lt;/strong&gt; Create template for this function. Don&amp;rsquo;t forget to implement hiding formular when user is not exist (user has not existed password reset string)&lt;/p&gt;

&lt;p&gt;So ok. Now if user forget password it wont need to call or email administrator, he can reset password via email.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CakePHP User authentication in few minutes</title>
      <link>https://jdmaymeow.com/post/code-advent/2016/cakephp-user-authentication/</link>
      <pubDate>Sat, 03 Dec 2016 14:21:08 +0100</pubDate>
      
      <guid>https://jdmaymeow.com/post/code-advent/2016/cakephp-user-authentication/</guid>
      <description>&lt;p&gt;Almost every page you create will need user authentication. Let&amp;rsquo;s make simple authentication which will have users and groups. For this project ill create plugin because it can be used in many other projects.
&lt;/p&gt;

&lt;h2 id=&#34;what-we-will-create&#34;&gt;What we will create&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Users and groups tables&lt;/li&gt;
&lt;li&gt;Routing for users login and logout&lt;/li&gt;
&lt;li&gt;Simple configuration&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;environment-setup&#34;&gt;Environment setup&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;PHP&lt;/li&gt;
&lt;li&gt;Composer&lt;/li&gt;
&lt;li&gt;Database server (mysql or postgresql)&lt;/li&gt;
&lt;li&gt;CakePHP&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;install-application&#34;&gt;Install application&lt;/h2&gt;

&lt;p&gt;First download CakePHP &lt;code&gt;composer self-update &amp;amp;&amp;amp; composer create-project --prefer-dist cakephp/app code-advent&lt;/code&gt;. Once download is finished you will have latest version of cakephp. You can try to run it with &lt;code&gt;bin/cake server&lt;/code&gt;. Ok now go to your app folder: &lt;code&gt;cd code-advent&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;plugin&#34;&gt;Plugin&lt;/h3&gt;

&lt;p&gt;Plugins are packages of models, controllers and views. Other users can use this packages in their applications. So we create our package for user authentication. This will contain users with roles. Run following command&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bin/cake bake plugin CakeAuth
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Our plugin will be available in plugins folder. Now create migrations for users database.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bin/cake bake migration CreateUsers username:string password:string role:string verified:boolean created modified -p CakeAuth
bin/cake bake all Users -p CakeAuth
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Open &lt;code&gt;UsersTable.php&lt;/code&gt; and add following rows to validator for roles.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-PHP&#34;&gt;-&amp;gt;add(&#39;role&#39;, &#39;inList&#39;, [
    &#39;rule&#39; =&amp;gt; [&#39;inList&#39; =&amp;gt; [&#39;admin&#39;, &#39;author&#39;]],
    &#39;message&#39; =&amp;gt; &#39;Please enter a valid role&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This rows will ensure only admin and author words can be used in our roles field when we create new user.&lt;/p&gt;

&lt;p&gt;When you try add user and then navigate to users index or view user, you will see password in plain text and this is dangerous. You have never store password in plain text, so lets fix it. Go to plugin model entity and edit &lt;code&gt;User.php&lt;/code&gt;. Add following rows to it&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;protected function _setPassword($password)
    {
        return (new DefaultPasswordHasher)-&amp;gt;hash($password);
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This function will return hash of your plugin. So you have done your auth plugin and now you need setup application to use it.&lt;/p&gt;

&lt;h2 id=&#34;setup-application&#34;&gt;Setup Application&lt;/h2&gt;

&lt;p&gt;Go to your application src and edit &lt;code&gt;AppController.php&lt;/code&gt;. Add following rows to initialize function:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$this-&amp;gt;loadComponent(&#39;Auth&#39;, [
            &#39;authorize&#39; =&amp;gt; [&#39;Controller&#39;], // Added this line to ensure authorization
            &#39;loginRedirect&#39; =&amp;gt; [
                &#39;controller&#39; =&amp;gt; &#39;Links&#39;,
                &#39;action&#39; =&amp;gt; &#39;index&#39;
            ],
            &#39;logoutRedirect&#39; =&amp;gt; [
                &#39;controller&#39; =&amp;gt; &#39;Users&#39;,
                &#39;action&#39; =&amp;gt; &#39;login&#39;,
                &#39;home&#39;
            ]
        ]);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and after initialize function add rows:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;public function beforeFilter(Event $event)
    {
        // this are allowed action all other actions cause users must login before to see them
        $this-&amp;gt;Auth-&amp;gt;allow([&#39;index&#39;, &#39;view&#39;, &#39;display&#39;]);
    }

public function isAuthorized($user)
    {
        // Admin can access every action
        if (isset($user[&#39;role&#39;]) &amp;amp;&amp;amp; $user[&#39;role&#39;] === &#39;admin&#39;) {
            return true;
        }

        // Default deny
        return false;
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you see there, add is not in allowed action. So you can&amp;rsquo;t create new users, to fix this edit your &lt;code&gt;UsersController&lt;/code&gt; and add &lt;code&gt;beforeFilter&lt;/code&gt; function with following row:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$this-&amp;gt;Auth-&amp;gt;allow([&#39;add&#39;]);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;routes&#34;&gt;Routes&lt;/h2&gt;

&lt;p&gt;when you navigate to not allowed action you have to see login form but CakePHP will return error because don&amp;rsquo;t know path to &lt;code&gt;users/login&lt;/code&gt;, our login is on address &lt;code&gt;cake-auth/users/login&lt;/code&gt;. This can be fixed with add new routes to your &lt;code&gt;config/routes.php&lt;/code&gt; file in plugin folder: (append to your file)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;Router::scope(&#39;/&#39;, function (RouteBuilder $routes) {
    $routes-&amp;gt;connect(&#39;/users/index&#39;, [&#39;plugin&#39; =&amp;gt; &#39;CakeAuth&#39;, &#39;controller&#39; =&amp;gt; &#39;Users&#39;, &#39;action&#39; =&amp;gt; &#39;index&#39;]);
    $routes-&amp;gt;connect(&#39;/users/login&#39;, [&#39;plugin&#39; =&amp;gt; &#39;CakeAuth&#39;, &#39;controller&#39; =&amp;gt; &#39;Users&#39;, &#39;action&#39; =&amp;gt; &#39;login&#39;]);
    $routes-&amp;gt;connect(&#39;/users/logout&#39;, [&#39;plugin&#39; =&amp;gt; &#39;CakeAuth&#39;, &#39;controller&#39; =&amp;gt; &#39;Users&#39;, &#39;action&#39; =&amp;gt; &#39;logout&#39;]);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So, your application is protected with user authentication. They can access only allowed actions (index, view, display), other actions are forbidden and requre users to have username and password. You can add more functionality like, email activation, or password reset.&lt;/p&gt;

&lt;p&gt;For those who was lazy to code there is a &lt;a href=&#34;https://github.com/jdmaymeow/cake-auth&#34;&gt;Github&lt;/a&gt; repository, or if you have another application made with CakePHP 3.x you can istall it with &lt;code&gt;composer require jdmaymeow/cake-auth&lt;/code&gt; and update AppController.&lt;/p&gt;

&lt;p&gt;What next? Be sure to follow twitter &lt;a href=&#34;https://twitter.com/jdmaymeow&#34;&gt;@jdmaymeow&lt;/a&gt;. Thanks for reading and come back here for more tutorials.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>